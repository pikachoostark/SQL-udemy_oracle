(SELECT MANAGER_ID, TO_CHAR(NULL) JOB_ID, TO_NUMBER(NULL) DEPARTMENT_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY MANAGER_ID)
UNION
(SELECT TO_NUMBER(NULL), JOB_ID, TO_NUMBER(NULL), SUM(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID)
UNION
(SELECT TO_NUMBER(NULL), TO_CHAR(NULL), DEPARTMENT_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID);

(SELECT DEPARTMENT_ID
FROM EMPLOYEES
WHERE MANAGER_ID = 100)
MINUS
(SELECT DEPARTMENT_ID 
FROM EMPLOYEES
WHERE MANAGER_ID IN (145, 201));

(SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_a%')
INTERSECT
(SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE INSTR(UPPER(LAST_NAME), 'S') != 0)
ORDER BY SALARY DESC;

/* В решении используется UNION ALL, потому что:
   "Об уникальноти и сортировке ничего сказано не было." ,
   но чисто по смыслу, ИМХО, здесь дубляжи не подходят. */
(SELECT LOCATION_ID, POSTAL_CODE, CITY 
FROM LOCATIONS
WHERE COUNTRY_ID IN ('IT', 'DE'))
UNION
(SELECT LOCATION_ID, POSTAL_CODE, CITY 
FROM LOCATIONS
WHERE INSTR(POSTAL_CODE, '9') != 0);

(SELECT COUNTRY_ID AS ID,
        COUNTRY_NAME AS COUNTRY,
        REGION_ID AS REGION
    FROM COUNTRIES
    WHERE LENGTH(COUNTRY_NAME) > 8)
UNION
(SELECT *
    FROM COUNTRIES
    WHERE REGION_ID != 1)
ORDER BY COUNTRY DESC;